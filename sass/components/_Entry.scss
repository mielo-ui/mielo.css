@use "../variables" as *;
@use "../mixins" as *;
@use "../utils" as *;

.mie.entry {
  // prettier-ignore
  background-image:
    linear-gradient(
        var(--mie-entry-bg-overlay),
        var(--mie-entry-bg-overlay)
    ),
    linear-gradient(
        var(--mie-entry-bg-main),
        var(--mie-entry-bg-main)
    );

  background-clip: padding-box;
  position: relative;
  margin: 0;

  min-width: var(--mie-entry-mw);
  height: var(--mie-entry-h);
  width: var(--mie-entry-p);

  @include flex(row, space-between, stretch);

  > .field {
    position: relative;
    flex: 1;

    label {
      transition: 300ms ease all;
      pointer-events: none;
      position: absolute;

      font-size: var(--mie-entry-value-fs);
      color: var(--mie-entry-label-fg);
      font-weight: normal;

      top: var(--mie-entry-label-offset-empty);
      left: var(--mie-entry-label-ph);
    }

    textarea {
      resize: none;
    }

    > input,
    > textarea {
      transition: outline-width 100ms ease;
      color: var(--mie-entry-value-fg);
      background: none;
      display: block;

      font-size: var(--mie-entry-value-fs);
      padding: var(--mie-entry-p);
      height: 100%;
      width: 100%;
      border: none;

      outline-color: var(--mie-entry-bg-outline);
      outline-style: solid;
      outline-width: 0;

      &:focus {
        color: var(--mie-entry-value-fg);
        outline-width: 0.2rem;
        z-index: 100;
      }

      &:focus ~ label,
      &.filled ~ label {
        top: var(--mie-entry-label-offset-active);
        font-size: var(--mie-entry-label-fs);
        color: var(--mie-entry-label-fg);
      }

      &[type="password"] {
        letter-spacing: 0.15rem;
      }
    }
  }

  // States
  &.disabled {
    opacity: 0.4;
  }

  &.fluid {
    width: 100%;
  }
}
