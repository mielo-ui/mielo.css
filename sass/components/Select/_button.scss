@use "../../variables" as *;
@use "../../mixins" as *;
@use "../../utils" as *;

.mie.select {
  &.transparent {
    --mie-select-bg-main: transparent;
  }

  > .content {
    // Base button content trigger
    > .base {
      background-clip: padding-box;

      // prettier-ignore
      background-image:
                linear-gradient(
                    var(--mie-select-bg-overlay),
                    var(--mie-select-bg-overlay)
                ),
                linear-gradient(
                    var(--mie-select-bg-main),
                    var(--mie-select-bg-main)
                );

      @include flex(row, space-between, center);
      border-radius: var(--mie-select-rounded);
      height: var(--mie-select-height);
      transition: outline 0.2s ease;

      outline-color: var(--mie-select-bg-outline);
      outline-style: solid;
      outline-width: 0;

      &:hover {
        cursor: pointer;
      }

      > .header {
        padding: 0 var(--mie-select-padding);
        @include flex(column, center);
        position: relative;
        height: 100%;
        flex: 1;

        > .label {
          transition: 300ms ease font-size;
          pointer-events: none;

          font-size: var(--mie-select-value-fs);
          color: var(--mie-select-label-fg);
          font-weight: 500;
        }

        > .value {
          margin-top: var(--mie-select-value-margin);
          font-size: var(--mie-select-value-fs);
          color: var(--mie-select-value-fg);
        }
      }

      > .right {
        @include flex(row, flex-end, center);

        > .arrow {
          margin-left: var(--mie-select-indicator-right);
          margin-right: var(--mie-select-padding);

          transition: transform 0.2s ease-in-out;
          color: var(--mie-select-value-fg);
        }
      }

      &.selected {
        > .header {
          > .label {
            top: var(--mie-select-label-top-active);
            font-size: var(--mie-select-label-fs);
            font-weight: 400;
          }
        }
      }

      &.opened {
        > .right {
          > .arrow {
            transform: rotate(180deg);
          }
        }
      }
    }
  }
}
