@use "sass:list";
@use "sass:map";
@use "sass:meta";

// Mixin declare variants declarations by class flag.
// Output declaration like
//
// .adw.<component>.<variant | empty> - for declaration variables
//
// .adw.button.large {
//   --adw-<component>-<property> -- = <property_value>;
//   /*__________________________________________________________________________*/
//   --adw-button-height: 3.4rem;
// }

@mixin variants-assign-variables($class, $vars) {
  $name: _kebab-case($class);

  @each $item in $vars {
    $value: _get($item, 2);
    $keys: _get($item, 1);
    $key: _join($keys, "-");

    --adw-#{$name}-#{$key}: #{$value};
  }
}

// This variant declare all variants variables separate from style
@mixin variants-map-to-component(
  $class,
  $variants,
  $default-variant: "default",
  $prefix: "",
  $prefix-directly: false
) {
  @each $variant in _keys($variants) {
    $class-name: variant-classname(
      $variant,
      $default-variant,
      $prefix,
      $prefix-directly
    );
    $vars: map-flatten(_get($variants, $variant));

    .adw.#{$class}#{$class-name} {
      @include variants-assign-variables($class, $vars);
    }
  }
}
